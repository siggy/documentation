<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>什么是Mastodon？ on Mastodon documentation</title>
    <link>https://documentation.sig.gy/zh-cn/</link>
    <description>Recent content in 什么是Mastodon？ on Mastodon documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://documentation.sig.gy/zh-cn/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>安装可选特色功能</title>
      <link>https://documentation.sig.gy/zh-cn/admin/optional/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/admin/optional/</guid>
      <description> 翻译状态： 本文是英文页面 Installing optional features 的翻译，最后翻译时间：2020-05-04，点击这里可以查看翻译后页面的改动。 </description>
    </item>
    
    <item>
      <title>备份你的服务器</title>
      <link>https://documentation.sig.gy/zh-cn/admin/backups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/admin/backups/</guid>
      <description>对于任何真实世界用途来说，你都应该保证日常备份Mastodon服务器。
概览 你所需要备份的东西，按重要程度排序：
PostgreSQL 数据库 .env.production 文件或等效文件中的应用密钥 用户上传的文件 Redis 数据库 故障模式 人们通常要应对两种类型故障：硬件故障，诸如磁盘上数据损坏；以及人为软件故障，诸如误删特定文件。本文档中，仅考虑前一种类型。
丢失PostgreSQL数据库，那一切都完了。Mastodon将所有重要数据存储于PostgreSQL数据库中。如果数据库消失，那你服务器上所有的帐户、所有的嘟文、所有关注者都将随之消失。
如果你丢失了应用密钥，对你的用户而言，Mastodon的某些功能将停止工作。你服务器上的用户将被登出，双因子认证（2FA）将不可用，Web Push API订阅将停止工作。
如果你丢失了用户上传的文件，你将丢失头像、横幅、媒体附件，但Mastodon仍会继续工作。
丢失Redis数据库几乎是无害的：唯一不可逆的数据是Sidekiq队列及之前失败任务的重试计划。主页与列表时间流虽然存储于Redis，但它们可以使用tootctl再生成。
最好的备份是所谓的异地备份，即与Mastodon自身不在同一台计算机上存储的备份。如果你托管的服务器起火了，硬盘爆炸了，存储于同一硬件备份将不可用。
备份应用密钥 应用密钥是最容易备份的，因为它们是不变的。你只需要将 .env.production 存储在安全的地方就可以了。
备份 PostgreSQL 突然断电、硬盘故障、错误迁移数库库schema都会致使数据损坏。由于以上原因，推荐偶尔使用 pg_dump 或 pg_dumpall 备份数据库。
如果要求高可用性，可以使用热流拷贝（hot streaming replication）使第二台PostgreSQL服务器始终具有最新数据，并做好另一台服务器出现故障切换至此的准备。
备份用户上传的文件 如果你使用外部对象存储，诸如Amazon S3、Google Cloud 或 Wasabi，你无需为怎么备份它们而担心。各自的公司将负责处理硬件故障。
如果你使用本地文件存储，复制体积巨大的 public/system 目录（默认存储上传文件的地方）。
备份 Redis 备份Redis是很容易的。Redis会定期将数据写入/var/lib/redis/dump.rdb文件，你只需要复制这个文件就可以了。
翻译状态： 本文是英文页面 Backing up your server 的翻译，最后翻译时间：2020-05-06，点击这里可以查看翻译后页面的改动。 </description>
    </item>
    
    <item>
      <title>处理不想要的内容</title>
      <link>https://documentation.sig.gy/zh-cn/user/moderating/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/user/moderating/</guid>
      <description>过滤嘟文 你可以过滤特定关键字和短语的嘟文，自动隐藏它们。
含有不同内容不同关键词的已激活的过滤器
要创建或管理过滤器，请转到设置 &amp;gt; 过滤器。点击“添加新的过滤器”按钮，你可以创建、编辑或删除过滤器。你现有的过滤器将汇总在一个表格中。
可以为筛选器设置到期日期、过滤位置、是否服务器端删除而非隐藏、是否过滤整个词条
过滤器有以下设置：
关键词 这是将被匹配的字符串，用于在嘟文的任意内容（包括CW，媒体描述和投票选项）中搜索该关键字。
失效时间 （可选）仅在有限的时间内应用过滤器。过期的过滤器不会自动删除，但可以通过设置新的过期日期（或将其更改回“永不过期”）来重新激活。
过滤器场景 选择应用过滤器的场景：
主页时间轴 = 含有关键词的嘟文将从你的主页时间轴中删除 通知 = 不会显示含有关键词的通知 公共时间轴 = 含有关键词嘟文不会显示在本站/跨站公共时间轴中 对话 = 含有关键词的嘟文将不会显示在对话、嘟文详情页 丢弃而非隐藏 过滤通常是在客户端进行的，因此禁用过滤器将使过滤后的嘟文再次可见。但是，如果启用“丢弃而不是隐藏”，则任何匹配嘟文将完全消失，并且永远不会出现在你的主页时间轴或通知中。
整个词条 过滤器通常会匹配任何状态下的关键词字符，无论它们是否位于单词中间。当启用“整个词条”后，只有当关键字前后是空格或其他非字母数字字符时，该关键词才会被过滤。
用户级操作 用户下拉菜单提供了多种操作
隐藏转嘟 如果你隐藏了某人的转嘟，你将不会在你的主页上看到他们的转嘟。这个选项只出现在你当前关注的用户身上。
隐藏 图为被隐藏的帐户
隐藏某一账号时，你可以选择是否将其通知一并隐藏。隐藏用户，而不隐藏通知时，会将该账号从用户界面中隐藏：
你不会在你的主页中看到该账号。 你不会看到其他人转嘟的该账号的嘟文。 你不会看到其他人提及这个账号。 你不会在公共时间轴中看到该账号。 如果你选择了同时隐藏通知，你还将不会收到来自该账号的通知。
用户不会知道他们已经被其他用户隐藏。
屏蔽 图为被屏蔽的帐户
屏蔽会将账号从用户界面中隐藏。
你不会在你的主页中看到该账号。 你不会看到其他人转嘟的该账号的嘟文。 你不会看到其他人提及这个账号。 你不会在公共时间轴中看到该账号。 你不会收到来自该账号的通知。 此外，在被屏蔽的账号一方，
被屏蔽账号会被强制取消对你的关注。 被屏蔽账号不能关注你。 被屏蔽账号不能看到别人对你的转嘟。 被屏蔽账号不能在公共时间轴中看到你。 如果你和被屏蔽的账号在同一服务器上，被屏蔽的用户将无法在登录时查看你的个人资料页。
屏蔽整个域名 如果你屏蔽了整个域名：
你将无法在公共时间轴上看到来自该域名的嘟文。 你将不会在主页看到其他人转发来自该域名的嘟文。 你将不会收到来自该域名的通知。 你将失去该域名上的所有关注者。 向管理员报告有问题的内容 报告模块允许选择被报告嘟文、添加注释和是否转发报告
如果你看到有违反站点规则的嘟文或用户，你可以向站点管理员报告该用户。点击用户下拉菜单或嘟文的下拉菜单上的“举报”选项将打开报告模块。在这里，你可以（并且应该）添加一个关于你为什么要举报这个帐号的注释。你可以附加某些有问题的嘟文，以了解你为什么要报告该账号，如果他们的行为违反了他们所在Mastodon站点的规则，你还可以选择将报告转发至他们所在Mastodon站点的管理员。
翻译状态： 本文是英文页面 Dealing with unwanted content 的翻译，最后翻译时间：2020-05-03，点击这里可以查看翻译后页面的改动。 </description>
    </item>
    
    <item>
      <title>创建一个帐户</title>
      <link>https://documentation.sig.gy/zh-cn/user/signup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/user/signup/</guid>
      <description>选择一个站点 你必须选择一个Mastodon站点进行注册，就好比你需要选择一个电子邮件提供商，或者像是为你的魔兽世界新角色选择一个地区（服务器）一样。该站点将是你的服务提供方，托管你的帐户、个人资料及个人主页信息流。
你可以 在 joinmastodon.org 上按类别和语言浏览Mastodon站点列表. 了解站点的政策 在你注册之前，了解该Mastodon站点的政策和使用条款是很重要的。Mastodon站点通常会在/about/more页面上列出它的政策。你可以在未登录的状态下，点击登录页面上的“了解更多”链接来找到政策和使用条款信息。
站点注册模式 Mastodon软件允许站点管理员从三种站点注册模式中选择一种：开放注册、邀请制和审核制。
开放注册 有些站点可能允许你立即注册。只需使用你的用户名、电子邮件地址和密码填写注册信息，就可以开始使用你的帐户了。
邀请制 有些站点禁用注册表单，而是要求生成并分享邀请链接以允许人们注册。
审核制 有些站点允许你填写注册表单，但是会有一个附加的表单条目来说明你为什么想要加入那个站点。提交了表单之后，你的帐户必须得到管理员的批准才能开始使用。
你的用户名和域名 Mastodon的用户名由两部分组成：
本站用户名，比如 alice Mastodon站点的域名，比如 example.com 就像电子邮件地址一样，为了方便起见，Mastodon允许你在向与你相同的服务器上的人发送地址时跳过第二部分，但是你必须记住：在与他人分享你的用户名时，应当包含站点的域名，否则他人将不能轻松的找到你。
我是Mastodon上的 @alice ！ 错误的表述 我是Mastodon上的 @alice@example.com ！ 正确的表述 我是Mastodon上的 https://example.com/@alice ！ 正确的表述 上述两种地址形式（完整用户名、用户主页链接）都可以在Mastodon搜索栏中查找相应的用户，所以你可以根据你的喜好分享。
相同的用户名可以在不同的服务器上注册——无法提前声明所有的域名后缀。就像电子邮件一样，你不应期待 alice@outlook.com 与 alice@gmail.com 或 alice@yahoo.com 是同一个人。
翻译状态： 本文是英文页面 Signing up for an account 的翻译，最后翻译时间：2020-05-02，点击这里可以查看翻译后页面的改动。 </description>
    </item>
    
    <item>
      <title>从源中安装</title>
      <link>https://documentation.sig.gy/zh-cn/admin/install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/admin/install/</guid>
      <description>前提条件 一台你有root访问权限的运行 Ubuntu 18.04 的机器 一个用于Mastodon站点的域名（或一个子域名），例如：example.com 一个电子邮件发送服务提供商，或其他SMTP服务器 你需要使用root用户运行命令。如果你现在不是root用户，请切换至root用户：
软件仓库 首先确保已经安装curl：
Node.js curl -sL https://deb.nodesource.com/setup_12.x | bash - Yarn curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - echo &amp;#34;deb https://dl.yarnpkg.com/debian/ stable main&amp;#34; | tee /etc/apt/sources.list.d/yarn.list 软件包 apt update apt install -y \ imagemagick ffmpeg libpq-dev libxml2-dev libxslt1-dev file git-core \ g++ libprotobuf-dev protobuf-compiler pkg-config nodejs gcc autoconf \ bison build-essential libssl-dev libyaml-dev libreadline6-dev \ zlib1g-dev libncurses5-dev libffi-dev libgdbm5 libgdbm-dev \ nginx redis-server redis-tools postgresql postgresql-contrib \ certbot python-certbot-nginx yarn libidn11-dev libicu-dev libjemalloc-dev 安装 Ruby 因为使用 rbenv 可以更容易的获得正确的版本并在新版本发布后进行更新，我们将使用 rbenv 来管理Ruby版本。rbenv 必须安装在单个Linux用户中，因此，我们首先需要使用以下命令创建一个Mastodon用户：</description>
    </item>
    
    <item>
      <title>单点登录（SSO）</title>
      <link>https://documentation.sig.gy/zh-cn/admin/optional/sso/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/admin/optional/sso/</guid>
      <description> 本页面仍在建设中。 翻译状态： 本文是英文页面 Single Sign On 的翻译，最后翻译时间：2020-05-04，点击这里可以查看翻译后页面的改动。 </description>
    </item>
    
    <item>
      <title>发布嘟文</title>
      <link>https://documentation.sig.gy/zh-cn/user/posting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/user/posting/</guid>
      <description>启用CW后的撰写表单
文本 每条嘟文的主体可由文本组成。默认的字符限制为500个字符。
链接 链接必须以 http(s):// 开头，无论长度如何，都将被视为23个字符
如果你的嘟文中有链接，它们必须以 http:// 或 https:// 开头。所有的链接无论实际上有多长，都将被记作23个字符。因此没有使用短链接来节省字符的必要。事实上，使用短链接是极其不被推荐的。
提及 键入@后会自动推荐你可能要提及的本站或跨站用户
你可以通过输入用户的完整地址来提及（@）他们，例如@alice@example.com。请注意，@word的任何用法都将被解释为提及本地用户名为word的用户（如果该用户存在于本站的话）。只有用户名部分才会受到字数限制，域名不被计算在字数内。
话题标签 话题标签会根据使用频率自动被系统推荐
你可以使用 #话题标签 使任何搜索该话题标签的人都可以发现你的嘟文。标签可以包含字母数字字符和下划线，但不能只包含数字。
自定义emoji 一组自定义表情符号存在于选择器中
每个服务器都提供了一套你可以使用的自定义表情符号。你可以使用表情符号的短代码，如:thounking:，或者点击撰写框中的表情符号图标，浏览“自定义”类别。你也可以使用unicode标准表情符号。
附加内容 你可以将媒体文件或投票附加到你的嘟文。
媒体文件 带有删除、编辑、标记为敏感媒体选项的附加媒体文件缩略图
点击回形针将文件附加到你的嘟文上。你可以附上以下文件：
图像 (PNG, JPG, GIF)：最大8MB。图像将被压缩至160万像素（足够一张1280x1280px的图像）。最多可以附加4张图片。 GIF动画：GIF动画会转换成无声的mp4，就像 Imgur/Gfycat (GIFV) 一样。你也可以上传无声的MP4和WebM，它们将被以同样方式处理。 视频 (MP4, M4V, MOV, WebM)：最大40MB。视频将被转换为最大比特率1300kbps，最大帧率60fps的H.264 MP4。 音频 (MP3, OGG, WAV, FLAC, OPUS, AAC, M4A, 3GP)：最大40MB。音频将使用V2 VBR（大约192kbps）转码成MP3。 编辑媒体 编辑媒体以添加媒体描述，或选择预览缩略图的焦点
通过点击附件缩略图上的“编辑”链接，你可以加载模块，这个模块允许你添加媒体描述或改变焦点。虽然是可选的，但还是建议添加媒体描述来简单地描述媒体中包含的内容。当媒体因任何原因无法加载时，或当视觉障碍人士使用屏幕阅读器和其他辅助技术访问时，这些描述将被显示出来。设置焦点也是可选的，但是当未以16：9的纵横比显示预览缩略图时，可以使预览缩略图看起来更好。
投票 一个含有2个单选选项，过期时间为1天的投票
单击条型图图标将投票附加到你的嘟文。
你可以设置最多4个选项，每个选项最多可以有25个字符。 默认为单选选择。单击圆型单选按钮，投票将切换为多项选择。 投票过期时间可以设置为5分钟、30分钟、1小时、6小时、1天、3天或7天。 嘟文可见范围 可见范围 公共时间轴 永久链接 个人资料页视图 主页时间轴 公开 可见 有 可见 可见 不公开 不可见 有 可见 可见 仅关注者 不可见 登录到同一站点 应用内或登录可见 可见 私信 不可见 登录并被提到后 应用内或登录可见 不可见 嘟文可以发布四个不同的隐私级别：</description>
    </item>
    
    <item>
      <title>更多设置</title>
      <link>https://documentation.sig.gy/zh-cn/user/contacts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/user/contacts/</guid>
      <description>生成邀请链接 从你的帐户设置中邀请别人加入本站
邀请链接可以被生成并与其他人分享，有些服务器需要邀请才能注册账号。在生成邀请链接时，你可以设置最多使用次数，以限制某个链接的使用次数，或者限制链接的可使用时间。邀请链接可以在任何时候停用。
关注管理 所有与你互相关注并且没有启用迁移功能的用户，按最后一次活动时间排序
在设置中有关注管理器，你可以根据不同的标准，对和你有关的用户进行筛选和排序。
关系： 你关注的、关注你的以及互相关注的账号。 帐户状态： 用户是否已启用迁移功能。 帐户活动： 用户在过去一个月内是否发布过信息。 你可以选择取消关注某些用户，或从你的关注者中删除某些用户，只需勾选方框并点击表头的相应按钮即可。
账号设置 在帐户设置中，你可以更改你的电子邮件地址，设置新密码，注销活跃会话以及以授权应用，也可以启用双重认证。
身份验证 个人资料附加信息的链接验证是通过使用rel=me链接验证你的身份的一种方法，但Mastodon也支持一个更通用的身份验证子系统。目前，这个子系统唯一支持的身份验证提供商是Keybase。
Keybase身份验证 个人资料上的身份验证
首先，注册Keybase并生成或上传一个GPG公钥到你的Keybase帐户。接下来，进入“证明更多身份（prove more identities）”。找到你的实例，如果没有，请联系Keybase寻求帮助。选择你的Mastodon域名，输入你的用户名。你可以通过使用你的Mastodon账号进行授权，并发布验证消息，来验证你的身份。一旦你这样做了，身份验证就会建立，你的个人资料将会显示Keybase的身份验证。
Keybase的身份验证是不可逆的。 Keybase使用不可变的签名链进行身份验证，所以一旦你在Keybase上验证了你的身份，你就不能删除它。你只能用你的相关私钥签署一个吊销信息来吊销你的验证。 翻译状态： 本文是英文页面 More settings 的翻译，最后翻译时间：2020-05-03，点击这里可以查看翻译后页面的改动。 </description>
    </item>
    
    <item>
      <title>故障分析</title>
      <link>https://documentation.sig.gy/zh-cn/admin/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/admin/troubleshooting/</guid>
      <description>我看到一个故障页说一些东西出错了。我怎么找出哪里出错了？ 所有带堆栈追踪（stack traces）的错误信息都将会被写入系统日志。当使用systemd时，可使用 journalctl -u mastodon-web（替换以相应的服务名） 来浏览每个服务的日志。当使用Docker时，与之类似：docker logs mastodon_web_1（替换以相应的容器名）。
服务端详细错误信息将永不会公开显示，因为它们可能会暴露你的内部设置，并为攻击者提供线索，让他们了解如何更好的入侵或如何更高效的滥用。
来自Mastodon web服务器的每一个响应都带有独一无二的请求ID（request ID），该ID也将反映在日志中。通过检查错误页的请求头，你可以在日志中轻松找到与之对应的堆栈追踪（stack traces）。
升级新版本后，有些页面看起来很奇怪，就像它们含有未设置样式的元素一样。为什么？ 检查升级后，你是否运行 RAILS_ENV=production bin/rails assets:precompile 并重启Mastodon web 进程。因为这看起来像提供了过期的样式与脚本。这也有可能由于内存缺乏导致预编译失败，很不幸webpack会占用大量内存。如果是这个原因，请确保你已经分配了swap空间。另外，也可以在另一台机器上预编译静态文件，然后把它们复制至 public/packs 目录。
升级新版本后，一些请求失败了，日志中的错误信息是 missing columns or tables。为什么？ 检查升级后，你是否运行 RAILS_ENV=production bin/rails db:migrate。因为这看起来Mastodon代码访问了一个更新或更旧的数据库schema。如果你使用PgBouncer，请确保此命令直接连接PostgreSQL，因为PgBouncer不支持迁移过程中的锁表操作。
我试图运行 tootctl 或 rake/rails 命令，但我得到 uninitialized constants 错误信息。哪里出错了？ 检查你是否在命令前使用 RAILS_ENV=production 指定正确的环境。默认情况下，假定使用开发环境，因此代码尝试加载开发相关gem。然而，在生产环境中，我们避免安装这些gem。这就是错误的来源。
翻译状态： 本文是英文页面 Troubleshooting errors 的翻译，最后翻译时间：2020-05-08，点击这里可以查看翻译后页面的改动。 </description>
    </item>
    
    <item>
      <title>匿名服务</title>
      <link>https://documentation.sig.gy/zh-cn/admin/optional/tor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/admin/optional/tor/</guid>
      <description>可以通过TOR的匿名服务来访问Mastodon。这将给你一个只能通过 TOR 网络连接的 *.onion 地址。
安装 Tor 首先，Tor的Debian软件仓库需要被添加至apt中。
deb https://deb.torproject.org/torproject.org stretch main deb-src https://deb.torproject.org/torproject.org stretch main 接下来，添加相应gpg密钥。
curl https://deb.torproject.org/torproject.org/A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89.asc | gpg --import gpg --export A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89 | apt-key add - 最后，安装所需软件包。
apt install tor deb.torproject.org-keyring 配置 Tor 编辑 /etc/tor/torrc 并添加如下设置。
HiddenServiceDir /var/lib/tor/hidden_service/ HiddenServiceVersion 3 HiddenServicePort 80 127.0.0.1:80 重启 tor。
sudo service tor restart 现在，你的tor域名可以在 /var/lib/tor/hidden_service/hostname 找到。
移动你的Mastodon配置 我们将需要将你的Mastodon配置告诉Nginx两次。为了不自我重复（DRY），我们需要将Mastodon配置移动到一个可被引用的独立文件。
在 /etc/nginx/snippets/mastodon.conf 创建一个新文件。放入除listen、server_name、include及所有SSL相关选项之外的所有配置参数至新文件中。你的新文件看起来可能像这样。
add_header Referrer-Policy &amp;#34;same-origin&amp;#34;; keepalive_timeout 70; sendfile on; client_max_body_size 80m; root /home/mastodon/live/public; … error_page 500 501 502 503 504 /500.</description>
    </item>
    
    <item>
      <title>配置你的新实例</title>
      <link>https://documentation.sig.gy/zh-cn/admin/setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/admin/setup/</guid>
      <description>创建一个管理员帐户 通过浏览器 在通过浏览器完成帐户注册后，你需要使用命令行给你新创建的帐户以管理员特权。假设你帐户的用户名为alice：
RAILS_ENV=production bin/tootctl accounts modify alice --role Owner 通过命令行 你可以使用命令行创建一个全新帐户。
RAILS_ENV=production bin/tootctl accounts create \ alice \ --email alice@example.com \ --confirmed \ --role Owner 一个随机密码将会显示在终端上。
填写站点信息 登录后，打开网站设置页面。虽然从技术上来说无需填写这些信息，但对于操作服务器的人而言，这被认为是至关重要的。
设置 含意 用于联系的公开用户名 你的用户名，人们可以知道谁运营着这台服务器 用于联系的公开电子邮件地址 一个可以联系到你的电子邮件地址，可供那些帐户被锁或没有帐户的人使用 本站简介 你为什么启动这个站点？为谁运营？什么使它与众不同？ 本站详细介绍 你可以在此放置各种信息，但建议放置行为准则。 填写完这些后，请点击“保存更改”。
翻译状态： 本文是英文页面 Setting up your new instance 的翻译，最后翻译时间：2020-05-04，点击这里可以查看翻译后页面的改动。 </description>
    </item>
    
    <item>
      <title>迁移到新机器</title>
      <link>https://documentation.sig.gy/zh-cn/admin/migrating/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/admin/migrating/</guid>
      <description>有时，出于各种原因，你需要将你的Mastodon实例从一台服务器迁移至另一台。幸运的是，这个过程并不太困解，虽然这可能导致一段时间的下线。
本篇指南基于Ubuntu Server编写；根据其他设置的不同，你的过程可能会有变化。 基本步骤 依照产品指南安装新的Mastodon服务器（切记，不要运行 mastodon:setup）。 停止旧服务器上的Mastodon（systemctl stop &#39;mastodon-*.service&#39;）。 依照如下指示，导出并导入Postgres数据库。 依照如下指示，复制 system/ 目录下文件。（注意：如果你使用S3存储，你可以跳过此步）。 复制 .env.production 文件。 运行 RAILS_ENV=production bundle exec rails assets:precompile 编译 Mastodon。 运行 RAILS_ENV=production ./bin/tootctl feeds build 重新构建每个用户的主页时间流。 启动新服务器上的Mastodon。 更新DNS设置，将其指向新服务器。 更新或复制你的Nginx设置，如果必要的话可重获取LetsEncrypt证书。 享受你的新服务器！ 详细步骤 什么数据需要被迁移 你必须需要复制如下内容：
~/live/public/system目录，里面包含了用户上传的图片与视频（如果使用S3，可跳过此步） Postgres数据库（使用pg_dump） ~/live/.env.production文件，里面包含了服务器配置与密钥 不太重要的部分，为了方便起见，你也可以复制如下内容：
nginx配置文件（位于/etc/nginx/sites-available/default） systemd配置文件（/etc/systemd/system/mastodon-*.service），里面可能包括一些你服务器的调优与个性化 pgbouncer配置文件，位于 /etc/pgbouncer （如果你使用pgbouncer的话） 导出并导入Postgres数据库 不要运行mastodon:setup，而是创建一个名为template0的空白Postgres数据库（当导入Postgres导出文件时，这是很有用的，参见pg_dump文档）。
在你的旧系统，使用mastodon用户运行如下命令：
pg_dump -Fc mastodon_production -f backup.dump 使用 rsync 或 scp 复制 backup.dump 文件。然后在新系统，使用mastodon帐户创建一个空数据库：
createdb -T template0 mastodon_production 然后导入它：
pg_restore -U mastodon -n public --no-owner --role=mastodon \ -d mastodon_production backup.</description>
    </item>
    
    <item>
      <title>迁移或删除帐户</title>
      <link>https://documentation.sig.gy/zh-cn/user/moving/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/user/moving/</guid>
      <description>导出你的信息 设置中的数据导出页面
在任何时候，你都可以在 设置 &amp;gt; 导出 中下载一个CSV文件，其中包括你当前关注的帐户、当前创建的列表、当前屏蔽的帐户、当前隐藏的帐户和当前被屏蔽的域名。你可以在 设置 &amp;gt; 导入 中导入你的关注、用户屏蔽、隐藏和域屏蔽列表，在这里可以合并或覆盖它们。
每七天可以申请下载你嘟文与媒体文件的存档一次，该存档的格式是ActivityPub JSON。由于技术上的限制，Mastodon目前不支持导入嘟文或媒体，但你的存档可以使用任何能够解析ActivityPub格式的软件查看。
迁入或迁出你的帐户 在 设置 &amp;gt; 帐户 底部，你可以找到与帐户迁入或迁出相关的选项。
帐户跳转 帐户跳转设置页面
跳转帐户将禁止从该帐户发布信息，并显示一个指向你的新帐户的“帐户已经迁移”通知。任何查看你的个人资料的人都可以看到这个通知，并知道要关注你的新帐户。已跳转的帐户无法被关注。可以在任何时候取消跳转。
帐户迁移 帐户迁移设置页面
迁移你的帐户等同于跳转你的帐户，但是，如果他们的软件支持迁移功能的话，它将不可逆转地迫使每个人取消关注你当前的帐户并关注你的新帐户。由于技术上的限制，你的嘟文将不会被移动。迁移帐户功能有一个很长的冷却期，在此期间你无法再次迁移，因此在使用这个功能之前要格外小心！
账号别名 别名管理页面
仅当你的两个账号都已设置别名后，帐户迁移才会启动。帐户别名当前仅用于帐户迁移，开始迁移之前，你需要将旧帐户设置为新帐户的别名。设置帐户别名本身是无害且可逆的。
删除帐户 删除帐户页面
在 设置 &amp;gt; 帐户 底部，你可以找到删除帐户的选项。删除你的帐户是不可逆的，并且会导致你的个人资料和用户名永远无法使用。
翻译状态： 本文是英文页面 Moving or leaving accounts 的翻译，最后翻译时间：2020-05-03，点击这里可以查看翻译后页面的改动。 </description>
    </item>
    
    <item>
      <title>全文搜索</title>
      <link>https://documentation.sig.gy/zh-cn/admin/optional/elasticsearch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/admin/optional/elasticsearch/</guid>
      <description>当有可用ElasticSearch时，Mastodon支持全文搜索。Mastodon的全文搜索允许登录用户从他们自己的嘟文、他们喜欢的嘟文、他们的书签和他们被提及的嘟文中查找相应结果。Mastodon有意禁用了在全数据库搜索任意关键词的功能。
安装 ElasticSearch ElasticSearch 需要 Java runtime。如果你还没有安装 Java，请立刻安装上它。以下操均假定你已经登录为root用户：
apt install openjdk-8-jre-headless 添加ElasticSearch官方软件仓库至apt：
wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | apt-key add - echo &amp;#34;deb https://artifacts.elastic.co/packages/6.x/apt stable main&amp;#34; | tee -a /etc/apt/sources.list.d/elastic-6.x.list apt update 现在，你可以安装 ElasticSearch：
apt install elasticsearch 安全警告： 默认情况下，ElasticSearch仅绑定于localhost，即无法从外部网络访问。你可以通过查看 /etc/elasticsearch/elasticsearch.yml 中的 network.host 来检查 ElasticSearch 绑定了哪些地址。考虑到由于缺乏认证层，任何能访问 ElasticSearch 的人都可以读取或修改里面的数据。因此，确保访问安全非常重要。如主要安装说明中所述，防火墙建议仅暴露了22、80、443端口。如果你是一个多主机配置，你必须知道如何保证内部流量安全。 安全警告: 由于近期ElasticSearch所使用的log4j库被披露出安全漏洞，使用了旧版本log4j(2.0到2.14.1)的ES可能会受到影响。如果使用了这些版本的log4j，请参阅 此 issue 来暂时缓解此问题。 启动 ElasticSearch：
systemctl enable elasticsearch systemctl start elasticsearch 配置 Mastodon 编辑 .env.production，添加如下变量：
ES_ENABLED=true ES_HOST=localhost ES_PORT=9200 如果你同一台机器上运行多个Mastodon服务器，你计划让它们使用同一个ElasticSearch，请确保他们都配置了互不重复的 REDIS_NAMESPACE 以分别他们的索引。如果你需要覆盖ElasticSearch索引前缀，你可以直接设置 ES_PREFIX。</description>
    </item>
    
    <item>
      <title>设置个人资料</title>
      <link>https://documentation.sig.gy/zh-cn/user/profile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/user/profile/</guid>
      <description>你的外观 用户资料卡会显示你的用户名、头像和横幅图片
你可以在 设置 &amp;gt; 配置文件 &amp;gt; 外观 页面中配置你的个人资料显示外观。
昵称 你的昵称会显示在你的Mastodon用户地址之前。默认情况下，你可以设置最多30个字符的昵称。
简介 自我简介是对你自己的简短描述，这会在你的个人资料上显示出来。默认情况下，你可以设置最多500个字符的自我简介。
头像 你的头像是一个图标，会显示在你的嘟文旁边，作为你的视觉身份的一部分。头像文件大小限制 2.0 MB，只支持 PNG、GIF 或 JPG 格式。图片分辨率将会裁剪至 400x400px。
个人资料页横幅图片 这个横幅图像会显示在你的个人资料页顶部，以及关注列表和帐户目录中的个人资料卡上。横幅图片文件大小限制 2.0 MB，只支持 PNG、GIF 或 JPG 格式。图片分辨率将会裁剪至 1500x500px。
账号标志 你可以在你的资料上设置特定的标志，让别人知道你会如何使用Mastodon。
保护你的帐户（锁嘟） 勾选 保护你的帐户（锁嘟） 后，两件事情将会发生：
新关注者不会被自动接受，你需要手动审核所有关注请求。 一个锁形图标会显示在你的个人页面上，让其他人知道他们的关注不会立即被接受。 机器人（bot）帐户 勾选 这是一个机器人帐户 后，将向你的个人资料页面上添加一个bot图标。此图标将让其他人知道你的帐户可能执行自动化活动，并且可能无人监控。其他的软件可能选择用不同方式对待bot账号，但是目前Mastodon只将bot标志作为一个视觉标识。
用户目录 勾选 在本站用户目录中收录此账号 后，将使你的个人资料可被通过浏览用户目录发现。
个人资料附加信息 个人资料附加信息是一种向你的配置文件添加易于浏览的额外信息的方式。你有4行可自定义标签和值。例如：
标签 内容 年龄 25 国家 德国 Pronouns he/him 网站 https://example.com 在这里填写什么，完全取决于你自己。附加信息内容可以包含提及、标签、自定义表情和链接。
链接验证 没有中心化的权威，基于文件材料的验证和加V是不可能的。然而，Mastodon可以交叉引用你放置在个人资料中的链接，以证明你是这些链接的真正所有者。如果这些链接之一是你的已被他人知晓并信任个人主页，那么它可以作为身份验证的次好方法。
如果你把一个链接放在你的个人资料附加信息中，Mastodon会检查被链接的页面是否也链接到你的Mastodon个人资料页。如果是，你会在链接旁边得到一个验证通过的标记，确认你是该页面的所有者。
在后台，Mastodon将检查回链链接的rel=&amp;quot;me&amp;quot;属性。同样的，放置在个人资料附加信息中的链接将会被附加上rel=&amp;quot;me&amp;quot;属性。
由于Mastodon可以自托管，因此没有比在已经被人们信任的域名之上托管一个Mastodon站点更好的方法来验证你的身份。 翻译状态： 本文是英文页面 Setting up your profile 的翻译，最后翻译时间：2020-05-02，点击这里可以查看翻译后页面的改动。 </description>
    </item>
    
    <item>
      <title>设置你的环境</title>
      <link>https://documentation.sig.gy/zh-cn/admin/config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/admin/config/</guid>
      <description> 本页面仍在建设中。 Mastodon使用环境变量作为其的配置。
为了方便起见，Mastodon从Mastodon目录中的 .env.production 文件读取环境变量，但是始终可以用特定方式覆盖它们。例如：在 systemd service 文件中可以使用 EnvironmentFile 从特定文件中读取环境变量或使用 Environment 定义环境变量，因此你可以为不同服务指定不同的环境变量。也可以在从命令行调用运行Mastodon时指定环境变量。
基本参数 站点互联 LOCAL_DOMAIN WEB_DOMAIN ALTERNATE_DOMAINS AUTHORIZED_FETCH 当设置为 true 时，Mastodon将停止内联签名活动，并要求远程服务器在拉取公开（public）和不公开（unlisted）的嘟文时进行身份验证。
这可以阻止被屏蔽的域名拉取你的公开嘟文，但代价是可能增加计算量，并与不支持附带签名的拉取请求的软件不兼容（如低于3.0版本的Mastodon）。
请注意：这个模式并不能保证你的公开嘟文（public、unlisted）不被恶意操作者获取，这仅仅是增加了一点难度。
WHITELIST_MODE 当设置为 true 时，Mastodon将仅与白名单内的服务器互联，同时关闭公开页面和一些客户端API。 白名单模式会启用 authorized fetch 模式。
当一个现存实例站点切换至白名单模式，以下命令可以被用来移除非白名单站点的数据：
tootctl domain purge --whitelist-mode 请注意：虽然Mastodon 3.0 版本便引入了白名单模式 WHITELIST_MODE，但在Mastodon 3.0和3.0.1版中并没有正确实现。
密钥 SECRET_KEY_BASE OTP_SECRET VAPID_PRIVATE_KEY VAPID_PUBLIC_KEY 部署 RAILS_ENV RAILS_SERVE_STATIC_FILES RAILS_LOG_LEVEL TRUSTED_PROXY_IP SOCKET PORT NODE_ENV BIND 缩放选项 WEB_CONCURRENCY MAX_THREADS PREPARED_STATEMENTS STREAMING_API_BASE_URL STREAMING_CLUSTER_NUM 数据库连接 PostgreSQL DB_HOST DB_USER DB_NAME DB_PASS DB_PORT DB_SSLMODE DATABASE_URL Redis REDIS_HOST REDIS_PORT REDIS_URL REDIS_NAMESPACE CACHE_REDIS_HOST CACHE_REDIS_PORT CACHE_REDIS_URL CACHE_REDIS_NAMESPACE ElasticSearch ES_ENABLED ES_HOST ES_PORT ES_PREFIX StatsD STATSD_ADDR STATSD_NAMESPACE 限制 SINGLE_USER_MODE EMAIL_DOMAIN_WHITELIST DEFAULT_LOCALE MAX_SESSION_ACTIVATIONS USER_ACTIVE_DAYS 电子邮件 SMTP_SERVER SMTP_PORT SMTP_LOGIN SMTP_PASSWORD SMTP_FROM_ADDRESS SMTP_DOMAIN SMTP_DELIVERY_METHOD SMTP_AUTH_METHOD SMTP_CA_FILE SMTP_OPENSSL_VERIFY_MODE SMTP_ENABLE_STARTTLS_AUTO SMTP_TLS 文件存储 CDN_HOST S3_ALIAS_HOST 本地文件存储 PAPERCLIP_ROOT_PATH PAPERCLIP_ROOT_URL Amazon S3 及其兼容存储 S3_ENABLED S3_BUCKET AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY S3_REGION S3_PROTOCOL S3_HOSTNAME S3_ENDPOINT S3_SIGNATURE_VERSION Swift SWIFT_ENABLED SWIFT_USERNAME SWIFT_TENANT SWIFT_PASSWORD SWIFT_PROJECT_ID SWIFT_AUTH_URL SWIFT_CONTAINER SWIFT_OBJECT_URL SWIFT_REGION SWIFT_DOMAIN_NAME SWIFT_CACHE_TTL 外部认证 OAUTH_REDIRECT_AT_SIGN_IN LDAP LDAP_ENABLED LDAP_HOST LDAP_PORT LDAP_METHOD LDAP_BASE LDAP_BIND_DN LDAP_PASSWORD LDAP_UID LDAP_SEARCH_FILTER PAM PAM_ENABLED PAM_EMAIL_DOMAIN PAM_DEFAULT_SERVICE PAM_CONTROLLED_SERVICE CAS CAS_ENABLED CAS_URL CAS_HOST CAS_PORT CAS_SSL CAS_VALIDATE_URL CAS_CALLBACK_URL CAS_LOGOUT_URL CAS_LOGIN_URL CAS_UID_FIELD CAS_CA_PATH CAS_DISABLE_SSL_VERIFICATION CAS_UID_KEY CAS_NAME_KEY CAS_EMAIL_KEY CAS_NICKNAME_KEY CAS_FIRST_NAME_KEY CAS_LAST_NAME_KEY CAS_LOCATION_KEY CAS_IMAGE_KEY CAS_PHONE_KEY SAML SAML_ENABLED SAML_ACS_URL SAML_ISSUER SAML_IDP_SSO_TARGET_URL SAML_IDP_CERT SAML_IDP_CERT_FINGERPRINT SAML_NAME_IDENTIFIER_FORMAT SAML_CERT SAML_PRIVATE_KEY SAML_SECURITY_WANT_ASSERTION_SIGNED SAML_SECURITY_WANT_ASSERTION_ENCRYPTED SAML_SECURITY_ASSUME_EMAIL_IS_VERIFIED SAML_ATTRIBUTES_STATEMENTS_UID SAML_ATTRIBUTES_STATEMENTS_EMAIL SAML_ATTRIBUTES_STATEMENTS_FULL_NAME SAML_ATTRIBUTES_STATEMENTS_FIRST_NAME SAML_ATTRIBUTES_STATEMENTS_LAST_NAME SAML_UID_ATTRIBUTE SAML_ATTRIBUTES_STATEMENTS_VERIFIED SAML_ATTRIBUTES_STATEMENTS_VERIFIED_EMAIL 隐藏服务 http_proxy ALLOW_ACCESS_TO_HIDDEN_SERVICE 其它 SKIP_POST_DEPLOYMENT_MIGRATIONS 翻译状态： 本文是英文页面 Configuring your environment 的翻译，最后翻译时间：2020-05-04，点击这里可以查看翻译后页面的改动。 </description>
    </item>
    
    <item>
      <title>设置你的首选项</title>
      <link>https://documentation.sig.gy/zh-cn/user/preferences/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/user/preferences/</guid>
      <description>自定义用户界面外观 选择一个站点主题 Mastodon默认为深色主题，但可以选择浅色或高对比度主题。
Mastodon浅色主题
选择你的布局 Mastodon默认为简单的单列布局，左侧有一个撰写框，右侧有一个列切换器。你可以选择启用高级网页界面，该界面允许你同时查看和固定多个列。
高级 web 界面
在这两个界面中，当有新的嘟文时，更新会自动加载。你可以启用“慢速模式”在栏目顶部显示一个横幅，显示新嘟文数量，只有当你点击横幅时，时间轴才会在点击后更新。
出于无障碍性的原因，GIF动画的自动播放默认是禁用的。如果你想看动图，可以启用自动播放 GIF 动画。你也可以在整个界面中减少动画的运动。
趋势标签在高级web界面中的“开始使用”栏下面，或者简单web界面中的列切换器下面（只有当有足够的空间显示它们时才会显示）。
确认对话框 你可以选择在执行某些操作前要求确认。目前，可在执行以下操作前设置确认：
取消关注 转嘟 删除 敏感内容 默认情况下，任何标记为敏感的媒体都会被隐藏在可点击的覆盖层后。你也可以选择始终显示/隐藏在此覆盖层后面的媒体，无论其是否被标记为敏感媒体。
隐藏和未加载的媒体使用由BlurHash算法提供的彩色渐变，它使用图像的颜色，但模糊了细节。这些渐变可以被禁用。
Blurhash缩略图示例
带有内容警告的嘟文默认是折叠的，但你可以选择总是展开警告嘟文，以便显示完整的嘟文。
控制你的通知 发送电子邮件 你可以根据你在Mastodon中收到的通知类型选择接收电子邮件通知。以下的通知类型可以启用。
关注 关注请求 转嘟 喜欢 提及 你还可以启用摘要邮件，这将为你提供长期不活动期间收到的通知概览。
隐藏特定通知 你可以选择不接收来自你不关注的人，或者不关注你的人的通知。这将导致回复、收藏、喜欢、转嘟和其他互动不会显示给你。
你也可以选择不接收来自你不关注的人的私信消息。
杂项选项 如果你选择禁止搜索引擎建立索引，你的公开资料和嘟文页面上将会被添加 noindex 标签。
你可以选择隐藏你的社交网络，这将使你关注的人和关注你的人仅你自己可见。
选择隐藏社交网络后的个人资料
如果你想看到被多次转嘟的嘟文重新插入到你时间流的最上方，你可以禁用在时间轴中合并转嘟。
发布默认值 嘟文默认可见范围为公开。你可以将新嘟文的默认可见范围改为不列出或仅关注者。关于嘟文可见范围的解释，请参阅 发布嘟文 &amp;gt; 嘟文可见范围。
默认情况下，你的嘟文的语言会被自动检测，但这种检测可能不准确。如果你主要或专门用某种语言发帖，最好在发布语言设置该语言。
如果你经常发布敏感媒体，你可以选择总是将我发送的媒体文件标记为敏感内容。
公共时间轴的语言过滤 你可以选择在浏览公共时间轴时只显示特定语言的嘟文。但是，请注意，语言检测可能非常不精确，因此你可能仍然会看到一些使用被禁用语言的嘟文，或者错过一些使用已启用语言的嘟文。
翻译状态： 本文是英文页面 Set your preferences 的翻译，最后翻译时间：2020-05-03，点击这里可以查看翻译后页面的改动。 </description>
    </item>
    
    <item>
      <title>伸缩你的服务器</title>
      <link>https://documentation.sig.gy/zh-cn/admin/scaling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/admin/scaling/</guid>
      <description>并发管理 Mastodon有三种进程：
Web (Puma) Streaming API 后台进程 (Sidekiq) Web (Puma) web进程处理绝大多数应用的短HTTP请求。以下环境变量可以控制它：
WEB_CONCURRENCY 控制worker进程数 MAX_THREADS 控制每进程的线程数 线程共享其父进程的内存。不同的线程被分配了专有内存，虽然他们通过copy-on-write共享了一些内存。数量较多的线程会先消耗掉你的CPU，数量较多的进程会先消耗掉你的内存。
这些数值会影响到可以同时处理多少HTTP请求。
在吞吐量方面，多进程比多线程要好。
Streaming API streaming API处理长HTTP连接与WebSockets连接，通过这些连接用户可以接受到实时更新。以下环境变量可以控制它：
STREAMING_CLUSTER_NUM 控制worker进程数 STREAMING_API_BASE_URL 控制streaming API的base URL 一个进程可以处理相当数量的连接。 如果您愿意，streaming API可以托管在其他子域上，例如：避免nginx代理连接开销。
后台进程 (Sidekiq) Mastodon许多任务都分配给后台进程，以确保HTTP请求快速响应，并防止HTTP请求中止影响到这些任务的执行。Sidekiq是单个进程，具有可配置的线程数。
线程数 虽然web进程数与web线程数影响Mastodon实例响应终端用户，分配给后台进程的线程数影响嘟文从作者分发至其他人的速度，电子邮件花多长时间发完等等。
Sidekiq的线程数并不受环境变量控制，但是可通过命令行参数控制，例如：
bundle exec sidekiq -c 15 将启一个15线程的sidekiq进程。请注意每个线程都需要能够连接数据库，这意味着数据库连接池应足够大以满足所有进程。数据库连接池的大小由DB_POOL环境变量控制，该变量必须至少与进程数同样大。
队列 Sidekiq根据任务的重要性使用不同队列，这里的重要性是指如果队列不工作，其对本地用户体验的冲击有多大。按重要性降序排列：
队列 重要性 default 影响本地用户的所有任务 push 推送消息至其它服务器 mailers 分发电子邮件 pull 从其它服务器拉取信息 scheduler 完成计划任务，例如更新当下流行标签及清理日志 默认队列及其优先级存储于config/sidekiq.yml，但可通过调用Sidekiq命令行覆盖，例如：
bundle exec sidekiq -q default 仅运行default队列。
Sidekiq处理队列的方式是，它首先检查第一个队列中的任务，如果没有，则检查下一个队列。这意味着，如果第一个队列已满，其他队列将延后。
作为一种解决方案，可以启动为不同队列启动不同的Sidekiq进程以确保真正的并列执行，例如：使用不同Sidekiq参数创建多个systemd服务。
请确保仅有一个scheduler队列！！
使用pgBouncer事务池 你为什么要用PgBouncer 如果开始耗尽可用的Postgres连接（默认为100），那PgBouncer可能是一个好方案。本文档将介绍Mastodon的一些常见陷阱及好的默认配置。</description>
    </item>
    
    <item>
      <title>升级到新版本</title>
      <link>https://documentation.sig.gy/zh-cn/admin/upgrading/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/admin/upgrading/</guid>
      <description> 当一个新的Mastodon版本释出后，它将出现在GitHub releases页面。请注意：运行来自master分支的未释出代码，虽然可以进行，但不推荐这样做。 Mastodon版本与git tags一致。在尝试升级之前，请至GitHub releases页面查找所需版本。该页面包含了一个更新日专，其中描述你需要了解的所有差异，以及特定的升级指令。
开始之前，切换至mastodon用户：
su - mastodon 并转至Mastodon根目录：
cd /home/mastodon/live 下载相应版本代码，这里假定版本为v3.1.2：
git fetch --tags git checkout v3.1.2 现在，执行GitHub版本发布说明中的升级指令。因为不同的版本有不同的指令，所以本页面将不包括任何指令。
从旧版本升级时，你可以安全的跳过中间版本。你无需单独检出他们。然而，你确实需要追踪每一个版本的升级指令。大多数指令都是重叠的，你只需要确保每条至少执行一次即可。 当你执行完版本发布说明中的指令后，切换回root用户：
exit 重启后台worker：
systemctl restart mastodon-sidekiq 并重载web进程：
systemctl reload mastodon-web reload操作是零下线时间的重启（restart），也被称为“分阶段重启（phased restart）”。因此，Mastodon升级通常不需要为计划下线而提前发布公告。罕见情况下，你可以改用restart操作，但你的用户将感到（短暂的）服务中断。 罕见情况下，streaming API 服务也会被更新并需要重启：
systemctl restart mastodon-streaming 更新streaming API服务非常罕见，在大多数版本中，不需要重启它。重启streaming API将导致服务器负载增加，因为断线的用户会尝试重连或改用REST API轮询。因此请尽量避免重启streaming API服务 就这样！ 您现在正在运行新版本的Mastodon。 翻译状态： 本文是英文页面 Upgrading to a new release 的翻译，最后翻译时间：2020-05-04，点击这里可以查看翻译后页面的改动。 </description>
    </item>
    
    <item>
      <title>使用管理命令行</title>
      <link>https://documentation.sig.gy/zh-cn/admin/tootctl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/admin/tootctl/</guid>
      <description>Mastodon的命令行界面是一个位于Mastodon根目录内bin目录中的名为tootctl的可执行文件。你必须通过RAILS_ENV环境变量指定你执行时打算使用的环境。除非你是在本地计算机上进行开发工作，否则你需要使用RAILS_ENV=production。如果你确信永不使用其它环境（开发、测试），为了方便起见，你可以把它添加到 .bashrc 文件，例如：
echo &amp;#34;export RAILS_ENV=production&amp;#34; &amp;gt;&amp;gt; ~/.bashrc 如果这样，便无需在每次执行时指定它。否则，通常会这样调用 tootctl 命令（假定你的Mastodon代码位于/home/mastodon/live）：
cd /home/mastodon/live RAILS_ENV=production bin/tootctl help 基础命令 lib/cli.rb tootctl self-destruct 通过向所有己知实例广播帐户删除通告，将本服务器从联邦宇宙抹除。此命令允许Mastodon服务器“干净退出（clean exit）”，即几乎不在其它服务器留下任何缓存。此命令始终是交互式的，且需要二次确认。
实际上，不会删除任何本地数据，因为直接清空数据库或删除整个VPS更快。如果你运行此命令后，无论如何都要继续运营实例，状态不匹配可能导致与其它站点互联时出错。
运行此命令之前，请确保你确实知道自己正在做什么。此操作不可逆，并且可能花费很长时间。完成此命令之后，服务器将处于破碎状态（BROKEN STATE）。需要一个运行中的Sidekiq进程，所以在队列完全被清空之前不要关闭服务器。 版本历史：
2.8.0 - 被加入 选项 描述 --dry_run 仅打印预期结果，而不执行任何操作。 tootctl --version 展示目前运行的Mastodon实例版本。
版本历史：
2.7.0 - 被加入 帐户相关命令 lib/mastodon/accounts_cli.rb tootctl accounts rotate 生成并广播新的RSA密钥，作为安全维护的一部分。
版本历史：
2.5.0 - 被加入 选项 描述 USERNAME 本地帐户用户名 --all 轮替所有本地帐户密钥，可取代 USERNAME。 tootctl accounts create 创建一个给定用户名（USERNAME）和给定电子邮件地址（&amp;ndash;email）的新帐户。
版本历史：
2.6.0 - 被加入 选项 描述 USERNAME 新帐户的本地用户名。 必须的。 --email EMAIL 要附加到用户的电子邮件地址。 必须的。 --confirmed 跳过发送确认邮件步骤并立即激活帐户。 --role ROLE 设定新用户的身份为 user, moderator 或 admin。默认为 user。 --reattach 重用已被删除帐户的旧用户名。 --force 强制删除使用此用户名（USERNAME）的现有帐户，然后重新的新帐户代替（刚刚删除的）该帐户。 --skip-sign-in-token 强制跳过该用户登录时的邮件验证码（目前这是不可逆操作）。 tootctl accounts modify 修改某帐户的身份，电子邮箱地址，激活状态，审核状态及禁用双因素认证（2FA）。</description>
    </item>
    
    <item>
      <title>使用社交功能</title>
      <link>https://documentation.sig.gy/zh-cn/user/network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/user/network/</guid>
      <description>浏览公共时间轴 公共时间轴上的嘟文
为了让你发现潜在的有趣内容，Mastodon提供了一种浏览所有公共嘟文的方法。当然，所有Mastodon服务器之间并不会全局共享嘟文，因此无法同时浏览所有公共嘟文。当你浏览跨站公共时间轴时，你将看到你所在的服务器所知道的所有公共嘟文。你的服务器可以通过多种方式发现嘟文，但其中大部分是来自你服务器上的其他用户关注的人。
这里有一种方法筛选跨站时间轴，以仅查看由你所在服务器发出的公共嘟文：本站时间轴。请注意这里的本地(local)仅是指服务器，而不是地理位置。
与其他人的嘟文互动 可以通过单击时间轴中的嘟文来加载扩展视图
你可以直接从时间轴对嘟文执行快速操作，或者你可以单击一条嘟文加载扩展视图，显示额外信息，包括：完整的时间戳、交互计数和嘟文回复（如果有的话）。在每一条嘟文上，你可以执行以下操作:
回复 点击箭头图标回复嘟文。你的嘟文会在你回复的嘟文下面出现。 转嘟 点击循环箭头图标转发嘟文。这篇嘟文将在你的个人资料中出现。 喜欢 点击星星图标喜欢嘟文。这篇嘟文将被添加到你的喜欢列表中，原嘟文作者将会受到这条嘟文被喜欢的通知。 添加到书签 点击缎带图标为嘟文添加书签。这篇嘟文将被添加到你的私有书签列表中，而不会产生通知。 点击省略号图标展开更多选项菜单。 通知 通知栏
当其他人与你或你的嘟文交互时，你将根据事件的类型收到通知消息。在通知栏里，你可以查看所有通知消息，或过滤特定类型的通知消息：
提及： 当有人在嘟文中提到你时会收到通知消息。 喜欢： 当有人喜欢了你的嘟文时会收到通知消息。 转嘟： 当有人转发了你的嘟文时会收到通知消息。 投票： 当你已经投票或创建的投票已经结束时会收到通知消息。 关注： 当有人关注你时会收到通知消息。 关注用户 只要你在应用程序界面（例如：Web界面、手机APP）中遇到的用户，只需要点击“关注”，该用户是否在你所在的服务器上并不会带来用户体验上的差异。
然而，如果你在不同的服务器上看到某人的公开资料，就会遇到一个障碍：该服务器将你视为另一个匿名访问者。不要担心！你可以简单地复制该用户资料的URL，或其中一个嘟文的URL，然后将该URL粘贴到你所在Mastodon的搜索栏中。
如果你正在访问另一个Mastodon站点的公开页面，请参阅站外使用Mastodon。
搜索 搜索功能可以从侧栏中访问
Mastodon的基本搜索允许登录用户查找包含特定话题标签的嘟文，如果他们知道URL或地址的话，可以直接加载用户或嘟文。搜索某个关键词将显示包括该关键词的用户以及话题标签。
直接通过URL加载嘟文
搜索“cats”时返回包含“cats”的帐户
搜索“cats”时返回话题标签
管理员可以选择安装全文搜索功能。Mastodon的全文搜索允许登录用户从他们自己的嘟文、他们喜欢的嘟文、他们的书签和他们被提及的嘟文中查找相应结果。为了减少人们通过搜索争议相关关键词来找人撕逼的滥用行为，Mastodon有意禁用了在全数据库搜索任意关键词的功能。
全文搜索支持以下操作符：
&amp;ldquo;精确短语&amp;rdquo; 将尝试查找包含在一对英文双引号 &amp;quot; 内的关键词。Mastodon将只显示完全匹配关键词的搜索结果。例如搜索 &amp;quot;look at my cluckers&amp;quot; 将精确查找到包含 look at my cluckers 这个短语的嘟文。 -排除 在某个关键词前面加上减号 -，可以排除这个关键词。比如搜索 animals -cats 就可以搜索到所有不包括cat但包括animals的嘟文。。 +包含 在关键词前面加上加号 +，就可以要求搜索结果必须包含的这个关键词。比如搜索 cat +dog 就可以搜到同时包含cat和dog的嘟文。 中文译者的话：Mastodon项目并没有对中文搜索进行相应的分词优化，因此在搜索中文时，中文短语将会被拆分成单字，致使最终搜索结果含有大量无关结果。例如搜索 中文搜索好用吗，默认情况下会被拆分成 中 文 搜 索 好 用 吗， 而不是被拆分成 中文搜索 中文 搜索 好用 吗。如果你所在实例没有优化中文搜索，搜索中文词语时，请使用双引号将所需搜索的中文词语包裹起来。</description>
    </item>
    
    <item>
      <title>推广自己和他人</title>
      <link>https://documentation.sig.gy/zh-cn/user/discoverability/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/user/discoverability/</guid>
      <description>在你的个人资料上推荐内容 精选话题标签 精选话题标签会显示该标签最后使用日期和总使用量
你可以选择展示你经常使用的某些话题标签。进入 设置 &amp;gt; 个人资料 &amp;gt; 精选的话题标签 来管理你目前正在使用的精选话题标签。一旦被精选，你的个人资料上就会显示一个指向该话题标签的链接，其中包括上次在嘟文中使用该话题标签的日期，以及使用该话题标签的嘟文总数。
推荐用户 图为四个被随机展示出来的推荐用户列表
你可以选择在个人资料中推荐你所关注的人。进入你所关注的人的个人资料页，打开下拉菜单，点击“在个人资料中推荐该用户”。当你推荐某用户时时，一个指向该用户个人资料页的链接将会出现在你个人资料页“你的推荐”栏目下。“你的推荐”栏目一次最多展示4个推荐用户，每次加载页面时，这四个推荐用户将会从你所有的推荐用户中随机选出。
置顶嘟文 一篇来自mastodon.social/@gargron的置顶嘟文
你可以选择在你的个人档案的顶部最多置顶5个自己的公开嘟文。进入嘟文下拉菜单，然后点击“在个人资料页面置顶”。置顶后，它将出现在你的嘟文选项卡的顶部，在所有其他按时间顺序排列的嘟文的之前。
用户资料目录 mastodon.social上的用户资料目录
用户资料目录显示了所有选择在目录中显示的帐户，可以用来快速找到你可能感兴趣的用户资料。
用户资料目录可以按照最近的活动（最近发布的嘟文）或新来的帐户（最近创建的帐户）进行排序。该目录也可以设定为只显示本地帐户，或者显示你的站点知道的所有已知帐户。
个人资料以卡片的形式出现，其中包括用户的昵称、账号地址、账号简介，以及一些简短的统计信息，比如他们发布了多少条嘟文、有多少关注者、以及最后一次发布嘟文的时间。
翻译状态： 本文是英文页面 Promoting yourself and others 的翻译，最后翻译时间：2020-05-03，点击这里可以查看翻译后页面的改动。 </description>
    </item>
    
    <item>
      <title>运行自己的服务器</title>
      <link>https://documentation.sig.gy/zh-cn/user/run-your-own/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/user/run-your-own/</guid>
      <description>为什么你要运行自己的Mastodon服务器？ 绝对控制自己在网络上的声音，不受制于任何其他人的管理与左右。你的服务器是你的财产，受你的管理。只要你想让它存在，它就会一直存在。 你在你自己的服务器上并不是孤立的。你可以关注其他任意服务器上任何人，他们也可以关注你，你可以像在同一服务器上一样交换信息。 你可以限制注册人数，成为服务器上唯一的一个人，然后像个人（微）博客一样运行；也可以为家人或朋友维护一个邀请制的社区；或者运行一个任何人都可以注册的服务器。这都由你自己决定！ 请注意，提供公共互联网服务涉及到审核工作和社区管理，而且这些工作会随着服务器的扩大而变得更加复杂。 如果你想要运行自己的Mastodon服务器…… 你需要这些：
一个域名。这是你和其他人访问你的服务器的方式，也是你和你的用户在网络上的身份标识。
如何获得：Namecheap, Gandi 等任何域名注册商。自带的年费根据域名选择的不同而不同。
一个VPS。将运行Mastodon代码的东西，它将始终连接到互联网。
如何获得：DigitalOcean, Hetzner, Exoscale, Scaleway 等任何主机提供商都可以。自带月费或年费，根据硬件规格不同，费用也不同。
一个电子邮件发送服务提供商。Mastodon需要通过电子邮件发送确认链接和各种通知，自己托管一个SMTP服务器，虽然可行，但是相较使用第三方提供商，自己托管SMTP服务器要保证可靠是更加困难的。
如何获得：Mailgun，SparkPost，Postmark，Sendgrid，任何一个提供SMTP API的电子邮件服务商。每月的费用根据发送的邮件量而定。
可选：对象存储。Mastodon可以将你和你的用户上传的文件保存在其运行的VPS的硬盘驱动器上，但是，硬盘驱动器通常不是无限的，而且后续很难升级扩容。对象存储实际上为你提供了无限制的计量文件存储。
如何获得：Amazon S3，Exoscale，Wasabi，Google Cloud，任何提供S3兼容或OpenStack Swift兼容API的服务商都可以。每用费用取决于存储的文件数量及其访问频率。
有许多Mastodon专用托管服务提供商可以满足上述许多（全部）要求，如果你对让他人处理所有技术问题感兴趣的话，你可以选择使用。通常情况下，你仍然需要购买自己的域名。一些这样的提供商是：
Masto.host Hostdon Spacebear 全托管解决方案非常适合那些没有经验或不想安装和维护软件的人。然而，自己负责硬件的所有组件，可以让你在伸缩性、性能和自定义方面有更大的控制权。
我们提供了一个DigitalOcean 一键安装镜像，你可以把它放在DigitalOcean vps上，通过交互式的安装向导，遵照我们的安装说明，基本上可以为你提供所需的所有东西。
DigitalOcean Mastodon一键安装镜像 然而，这只是假定单机的情况下安装。Mastodon可以很好地横向伸缩。如果你的需求超出了单机的容量，Mastodon可以被分成多个应用服务器、后台workers、多个Redis后端、PostgreSQL replicas。如果你有上述需求，就不能使用一键安装镜像。
如果你有兴趣自己安装一切，请点击这里：
准备你的机器 翻译状态： 本文是英文页面 Running your own server 的翻译，最后翻译时间：2020-05-03，点击这里可以查看翻译后页面的改动。 </description>
    </item>
    
    <item>
      <title>运营操作</title>
      <link>https://documentation.sig.gy/zh-cn/admin/moderation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/admin/moderation/</guid>
      <description>帐户管理 Mastodon运营操作始终作用于本地，即从特定服务器查看的内容。一台服务器管理员（admin）或运营员（moderator）不能影响另一台服务器上的用户，他们只能影响另一台服务器用户的本地服务器副本。
禁止登录（disable login） Mastodon可以被禁止登录。这样可以禁止用户对帐户进行任何操作，但是其帐户的内容仍保持不变。这个限制是可撤销的，任何时候都可以重新激活该用户。本限制仅适用于你服务器的本地用户。
隐藏（silence） 在Mastodon，隐藏（silence）是沙箱（sandbox）的同义词。一个被隐藏的帐户不会出现在未关注该帐户的用户面前。该帐户所有内容仍存在，这些内容可以通过搜索查找到，该帐户可以被提及、被关注，但是这些内容是不可见的。
此外，隐藏操作不会影响联邦宇宙。一个本地隐藏了的帐户不会自动在其他服务器隐藏。
本限制是可撤销的，任何时间都可以去除该帐户的隐藏。
封禁（suspension） 在Mastodon，封禁（suspension）是删除（deletion）的同义词。该帐户不会出现在搜索之中，其用户资料页将消失，该帐户的所有嘟文，上传，关注者以及所有其它数据都将被移除。本限制是不可逆的。当一个帐户被解除屏蔽，用户可以重新控制帐户，但旧数据已经一去不复返了。
实例管理 由于使用帐户管理单独处理来自行为异常服务器的大量用户是让人精疲力竭的事，所以可以预清空来自特定服务器的所有用户，即所谓的域名屏蔽（domain block）。该操作有多个不同严厉程度。
拒绝接收媒体文件（reject media） 当这个选项被激活，来自该服务器的文件将不会传递至本地。其包括头像、横幅、emoji及媒体附件。
隐藏（silence） 对来自该服务器的所有帐户应用隐藏（silence）操作。
屏蔽（suspend） 对来自该服务器的所有帐户应用封禁（suspension）操作。本地将不储存除用户名外的任何数据。
反广告措施 Mastodon有以下基本措施以阻止广告内容：
注册时需确认电子邮件地址 基于IP的注册频率限制 然而，专业广告发送者（spammer）将绕过这些措施。你可以应用的措施是电子邮件域名屏蔽。在注册期间，Mastodon将解析所给电子邮箱地址的A纪录或MX纪录，即电子邮件服务器的IP地址，并对照动态存储的黑名单中检查该IP地址。
屏蔽电子邮件域名 广告发送者（spammer）时常使用不同的电子邮件域名，以让他们看起来是使用许多不同的电子邮件服务器注册，而这些电子邮件域名很难被分别列入黑名单。但是，有时这些域名被解析到了同IP地址电子邮件服务器。如果你发现同一时间有大数广告发送者（spammer）注册，你可以使用在线DNS查询工具或 Linux dig 组件来检查，例如：dig example.com 将查询该域名的所有DNS A纪录。如果你注意到所有域名指向同一IP，你可以把它添加至电子邮件域名屏蔽列表中。
封禁IP Mastodon自身不支持基于IP地址的访问者屏蔽，这不是一个万无一失的策略。IP有时会被不同的人共享，并时常会易手。但可以使用 Linux 防火墙来基于IP地址屏蔽访问者。下面的例子需要使用 iptables 和 ipset：
# Install ipset sudo apt install ipset # Create blacklist named &amp;#34;spambots&amp;#34; sudo ipset create spambots nethash # Add 1.2.3.4 to the blacklist sudo ipset add spambots 1.2.3.4 # Add firewall rule based on the blacklist sudo iptables -I INPUT 1 -m set --match-set spambots src -j DROP 但是注意，不要把你自己封禁了。</description>
    </item>
    
    <item>
      <title>站外使用Mastodon</title>
      <link>https://documentation.sig.gy/zh-cn/user/external/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/user/external/</guid>
      <description>与另一个Mastodon站点的远程互动 Mastodon网站上的一个嘟文的永久链接
当你在跨站浏览其他由Mastodon驱动的远程站点时，点击任何一个交互按钮都会加载一个对话框，将你重定向到你的本地站点。
跨站嘟文回复对话框
登录到一个客户端应用程序 你可以使用你的Mastodon帐户登录到任何可以实现Mastodon API的应用程序。这些应用程序的列表可以在 https://joinmastodon.org/apps 中找到。
翻译状态： 本文是英文页面 Using Mastodon externally 的翻译，最后翻译时间：2020-05-03，点击这里可以查看翻译后页面的改动。 </description>
    </item>
    
    <item>
      <title>准备你的机器</title>
      <link>https://documentation.sig.gy/zh-cn/admin/prerequisites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://documentation.sig.gy/zh-cn/admin/prerequisites/</guid>
      <description>如果你正在设置一台全新的机器，推荐你首要完成安全设置。以下内容假定你运行 Ubuntu 18.04：
禁止密码登录SSH（仅允许密钥登录） 首先，请确保你实际上是通过密钥而不是通过密码登录到服务器的，否则这将使你无法登录。许多托管服务提供商支持上传公钥，并自动为新机器设置基于密钥的root登录。
编辑 /etc/ssh/sshd_config 并找到 PasswordAuthentication。确保它已被去除注释并被设为 no。如果你做了任何改动，请重启 sshd。
更新系统 apt update &amp;amp;&amp;amp; apt upgrade -y 安装 fail2ban 以阻止重复登录尝试 编辑 /etc/fail2ban/jail.local 并添加以下内容：
[DEFAULT] destemail = your@email.here sendername = Fail2Ban [sshd] enabled = true port = 22 [sshd-ddos] enabled = true port = 22 最后重启fail2ban：
systemctl restart fail2ban 安装防火墙并只暴露SSH、HTTP、HTTPS端口 首先，安装 iptables-persistent。在安装期间，它将询问你是否保留现有规则。
apt install -y iptables-persistent 编辑 /etc/iptables/rules.v4 并添加如下内容：
*filter # Allow all loopback (lo0) traffic and drop all traffic to 127/8 that doesn&amp;#39;t use lo0 -A INPUT -i lo -j ACCEPT -A INPUT !</description>
    </item>
    
  </channel>
</rss>
